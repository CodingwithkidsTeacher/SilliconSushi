// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SilliconSushi.Models;

namespace SilliconSushi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220607014536_AddedShoppingCartItemClass")]
    partial class AddedShoppingCartItemClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SilliconSushi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SilliconSushi.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SushiId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("SushiId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("SilliconSushi.Models.Sushi", b =>
                {
                    b.Property<int>("SushiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Allergy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("InStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LongDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SushiOfTheDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("SushiId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sushis");

                    b.HasData(
                        new
                        {
                            SushiId = 4,
                            Allergy = "",
                            ImageUrl = "https://i.ibb.co/QcZMNxm/makisushi.jpg",
                            InStock = true,
                            LongDescription = "This is the dragon sushi made of all veggies ingredients",
                            Name = "Dragon Sushi Super",
                            Price = 4m,
                            ShortDescription = "Super Yummy Sushi",
                            SushiOfTheDay = true
                        },
                        new
                        {
                            SushiId = 5,
                            Allergy = "",
                            ImageUrl = "https://i.ibb.co/f4H3PH6/rolls.jpg",
                            InStock = true,
                            LongDescription = "This is the dragon sushi made of all veggies ingredients",
                            Name = "Miki Sushi",
                            Price = 2m,
                            ShortDescription = "Second Yummy Sushi",
                            SushiOfTheDay = true
                        });
                });

            modelBuilder.Entity("SilliconSushi.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("SilliconSushi.Models.Sushi", "Sushi")
                        .WithMany()
                        .HasForeignKey("SushiId");

                    b.Navigation("Sushi");
                });

            modelBuilder.Entity("SilliconSushi.Models.Sushi", b =>
                {
                    b.HasOne("SilliconSushi.Models.Category", null)
                        .WithMany("Sushis")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("SilliconSushi.Models.Category", b =>
                {
                    b.Navigation("Sushis");
                });
#pragma warning restore 612, 618
        }
    }
}
